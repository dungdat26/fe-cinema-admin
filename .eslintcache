[{"D:\\Project\\fe-admin-cinema-main\\src\\index.js":"1","D:\\Project\\fe-admin-cinema-main\\src\\App.js":"2","D:\\Project\\fe-admin-cinema-main\\src\\reportWebVitals.js":"3","D:\\Project\\fe-admin-cinema-main\\src\\components\\Appbar\\Appbar.js":"4","D:\\Project\\fe-admin-cinema-main\\src\\pages\\AddProducer\\AddProducer.js":"5","D:\\Project\\fe-admin-cinema-main\\src\\components\\TabsAdd\\TabsAdd.js":"6","D:\\Project\\fe-admin-cinema-main\\src\\pages\\AddFilm\\AddFilm.js":"7","D:\\Project\\fe-admin-cinema-main\\src\\pages\\AllFilm\\AllFilm.js":"8","D:\\Project\\fe-admin-cinema-main\\src\\pages\\EditFilm\\EditFilm.js":"9","D:\\Project\\fe-admin-cinema-main\\src\\axios-constain.js":"10","D:\\Project\\fe-admin-cinema-main\\src\\components\\Menu\\Menu.js":"11","D:\\Project\\fe-admin-cinema-main\\src\\pages\\AddDirector\\AddDirector.js":"12","D:\\Project\\fe-admin-cinema-main\\src\\pages\\AddActor\\AddActor.js":"13","D:\\Project\\fe-admin-cinema-main\\src\\components\\ItemFilm\\ItemFilm.js":"14","D:\\Project\\fe-admin-cinema-main\\src\\pages\\AllProducer\\AllProducer.js":"15","D:\\Project\\fe-admin-cinema-main\\src\\components\\ItemProducer\\ItemProducer.js":"16","D:\\Project\\fe-admin-cinema-main\\src\\pages\\EditProducer\\EditProducer.js":"17","D:\\Project\\fe-admin-cinema-main\\src\\pages\\AllActor\\AllActor.js":"18","D:\\Project\\fe-admin-cinema-main\\src\\components\\ItemActor\\ItemActor.js":"19","D:\\Project\\fe-admin-cinema-main\\src\\pages\\EditActor\\EditActor.js":"20","D:\\Project\\fe-admin-cinema-main\\src\\pages\\AllDirector\\AllDirector.js":"21","D:\\Project\\fe-admin-cinema-main\\src\\components\\ItemDirector\\ItemDirector.js":"22","D:\\Project\\fe-admin-cinema-main\\src\\pages\\EditDirector\\EditDirector.js":"23"},{"size":587,"mtime":1609388253000,"results":"24","hashOfConfig":"25"},{"size":1644,"mtime":1609954855209,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1609388253000,"results":"27","hashOfConfig":"25"},{"size":1574,"mtime":1609388253000,"results":"28","hashOfConfig":"25"},{"size":2619,"mtime":1611076989535,"results":"29","hashOfConfig":"25"},{"size":2059,"mtime":1611077025509,"results":"30","hashOfConfig":"25"},{"size":16969,"mtime":1610976718021,"results":"31","hashOfConfig":"25"},{"size":1255,"mtime":1610555510714,"results":"32","hashOfConfig":"25"},{"size":10671,"mtime":1610771473371,"results":"33","hashOfConfig":"25"},{"size":137,"mtime":1609388253000,"results":"34","hashOfConfig":"25"},{"size":4755,"mtime":1609486656106,"results":"35","hashOfConfig":"25"},{"size":3379,"mtime":1611077551915,"results":"36","hashOfConfig":"25"},{"size":3332,"mtime":1610089697327,"results":"37","hashOfConfig":"25"},{"size":1495,"mtime":1610903631082,"results":"38","hashOfConfig":"25"},{"size":1409,"mtime":1609430720262,"results":"39","hashOfConfig":"25"},{"size":1520,"mtime":1609477994429,"results":"40","hashOfConfig":"25"},{"size":2680,"mtime":1609954777504,"results":"41","hashOfConfig":"25"},{"size":1692,"mtime":1610909729754,"results":"42","hashOfConfig":"25"},{"size":1542,"mtime":1610909736822,"results":"43","hashOfConfig":"25"},{"size":3441,"mtime":1610909693600,"results":"44","hashOfConfig":"25"},{"size":1461,"mtime":1610909958712,"results":"45","hashOfConfig":"25"},{"size":1541,"mtime":1610909974124,"results":"46","hashOfConfig":"25"},{"size":3747,"mtime":1609572389108,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1kr14xg",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"D:\\Project\\fe-admin-cinema-main\\src\\index.js",[],["97","98"],"D:\\Project\\fe-admin-cinema-main\\src\\App.js",["99"],"import { Switch, Route } from \"react-router-dom\";\n\nimport { Container } from \"@material-ui/core\";\n\nimport \"./App.scss\";\nimport Appbar from \"./components/Appbar/Appbar\";\nimport AllFilm from \"./pages/AllFilm/AllFilm\";\nimport AddFilm from \"./pages/AddFilm/AddFilm\";\nimport EditFilm from \"./pages/EditFilm/EditFilm\";\nimport AddProducer from \"./pages/AddProducer/AddProducer\";\nimport TabsAdd from './components/TabsAdd/TabsAdd';\nimport AllProducer from \"./pages/AllProducer/AllProducer\";\nimport EditProducer from './pages/EditProducer/EditProducer';\nimport AllActor from \"./pages/AllActor/AllActor\";\nimport EditActor from \"./pages/EditActor/EditActor\";\nimport AllDirector from \"./pages/AllDirector/AllDirector\";\nimport EditDirector from \"./pages/EditDirector/EditDirector\";\nfunction App() {\n  return (\n    <div style={{ minHeight: \"200vh\" }}>\n      <Appbar />\n\n      <Container>\n        <Switch>\n          <Route path=\"/all-film\" component={AllFilm} />\n          <Route path=\"/add-film\" component={AddFilm} />\n          <Route path=\"/edit-film/:id_phim\" component={EditFilm} />\n          <Route path=\"/add-producer\" component={AddProducer} />\n          <Route path=\"/all-producer\" component={AllProducer} />\n          <Route path=\"/edit-producer/:id_producer\" component={EditProducer} />\n          <Route path=\"/all-actors\" component={AllActor} />\n          <Route path=\"/edit-actor/:id_actor\" component={EditActor} />\n          <Route path=\"/all-directors\" component={AllDirector} />\n          <Route path=\"/edit-director/:id_director\" component={EditDirector} />\n        </Switch>\n      </Container>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","D:\\Project\\fe-admin-cinema-main\\src\\reportWebVitals.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\components\\Appbar\\Appbar.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\pages\\AddProducer\\AddProducer.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\components\\TabsAdd\\TabsAdd.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\pages\\AddFilm\\AddFilm.js",["100"],"import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Container,\n  TextField,\n  Button,\n  Select,\n  FormControl,\n  InputLabel,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport axios from \"../../axios-constain\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Input from \"@material-ui/core/Input\";\nimport TabsAdd from \"../../components/TabsAdd/TabsAdd\";\n// 0 ngưng chiếu\n// 1 sắp chiếu\n// 2 đang chiếu\n// 3 vy béo\n\nconst status = [\n  {\n    value: \"0\",\n    label: \"Ngưng chiếu\",\n  },\n  {\n    value: \"1\",\n    label: \"Sắp chiếu\",\n  },\n\n  {\n    value: \"2\",\n    label: \"Đang chiếu\",\n  },\n];\n\nclass AddFilm extends Component {\n  state = {\n    EN_name: \"\",\n    VN_name: \"\",\n    status: \"0\",\n    types: [],\n    duration: \"0\",\n    urlImg: \"\",\n    country: \"\",\n    date: new Date().toLocaleDateString(),\n    content: \"\",\n    price: \"\",\n    discount: \"\",\n    urlFilm: \"\",\n    producers: [],\n    types: [],\n    director: \"\",\n    producerName: [],\n    directorName: [],\n    personName: [],\n    typeName: [],\n    renderActor: [],\n    renderDirector: [],\n    renderProducer: [],\n    renderType: [],\n  };\n\n  componentDidMount() {\n    const date = new Date();\n\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n\n    this.setState({ date: `${year}-${month}-${day}` });\n\n    axios\n      // get producers từ db và map theo tên để  select tên hiện thị trong input\n      //renderProducer dùng để hiện thị name các producer trong input selection\n      .get(\"/get-producers\")\n      .then((res) => {\n        console.log(res.data);\n        const producers = [...res.data.producers];\n        this.setState({ producers: producers });\n\n        const renderProducer = producers.map((producer) => {\n          return producer.name;\n        });\n        console.log(producers);\n        console.log(renderProducer);\n        this.setState({ renderProducer });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    // get directors từ db và map theo tên để  select tên hiện thị trong input\n    //renderDirector dùng để hiện thị name_director các directors trong input selection\n    axios\n      .get(\"/get-directors\")\n      .then((res) => {\n        // console.log(res.data);\n        const directors = [...res.data.directors];\n\n        this.setState({ directors: directors });\n\n        const renderDirector = directors.map((director) => {\n          return director.name_director;\n        });\n        // console.log(directors);\n        console.log(renderDirector);\n        this.setState({ renderDirector });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    // get actors từ db và map theo tên để  select tên hiện thị trong input\n    //renderActor dùng để hiện thị name_actor các actors trong input selection\n    axios\n      .get(\"/get-actors\")\n      .then((res) => {\n        // console.log(res.data);\n\n        const actors = [...res.data.actors];\n        this.setState({ actors: actors });\n\n        const renderActor = actors.map((actor) => {\n          return actor.name_actor;\n        });\n        // console.log(actors);\n        console.log(renderActor);\n        this.setState({ renderActor });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    // get the_loai từ db và map theo tên để  select tên hiện thị trong input\n    //renderType dùng để hiện thị type_name các the_loai trong input selection\n    axios\n    .get(\"/get-the_loai\")\n    .then((res) => {\n      // console.log(res.data);\n      const types = [...res.data.types];\n      // console.log(types);\n      this.setState({ types: types });\n      const renderType = types.map((type) => {\n        return type.type_name;\n      });\n      // console.log(renderType);\n      this.setState({ renderType });\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  changeInputHandler = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n    console.log(event.target.value);\n  };\n\n  //onchange cho multiple Selector(chọn nhiều diễn viên) cho Actor trong input\n  changeInputMultipleActor = (e) => {\n    const value = e.target.value;\n    console.log(e.target.value);\n    this.setState({ personName: value }, () => {\n      console.log(this.state.personName);\n    });\n  };\n\n  //onchange cho multiple Selector(chọn nhiều đạo diễn) cho Actor trong input\n  changeInputMultipleDirector = (e) => {\n    const value = e.target.value;\n    console.log(e.target.value);\n    this.setState({ directorName: value }, () => {\n      console.log(this.state.directorName);\n    });\n  };\n\n  //onchange cho multiple Selector(chọn nhiều nhà sản xuất) cho Actor trong input\n  changeInputMultipleProducer = (e) => {\n    const value = e.target.value;\n    console.log(e.target.value);\n    this.setState({ producerName: value }, () => {\n      console.log(this.state.producerName);\n    });\n  };\n\n  //onchange cho multiple Selector(chọn nhiều thể loại) cho Actor trong input\n  changeInputMultipleType = (e) => {\n    const value = e.target.value;\n    console.log(e.target.value);\n    this.setState({ typeName: value }, () => {\n      console.log(this.state.typeName);\n    });\n  };\n\n  submitHandler = () => {\n    const filmData = {\n      ...this.state,\n    };\n\n    //map actors theo _id khi gửi lên BE sẽ có dạng là Array và String\n    //nên khi vào BE phải map lại lần nữa theo dạng Array và Object để đúng với modal trong be\n    filmData.actors = filmData.personName.map((name) => {\n      return filmData.actors.find((actor) => {\n        return actor.name_actor === name;\n      })._id;\n    });\n\n    //map directors theo _id khi gửi lên BE sẽ có dạng là Array và String\n    //nên khi vào BE phải map lại lần nữa theo dạng Array và Object để đúng với modal trong be\n    filmData.directors = filmData.directorName.map((name1) => {\n      return filmData.directors.find((director) => {\n        return director.name_director === name1;\n      })._id;\n    });\n\n    //map producers theo _id khi gửi lên BE sẽ có dạng là Array và String\n    //nên khi vào BE phải map lại lần nữa theo dạng Array và Object để đúng với modal trong be\n    filmData.producers = filmData.producerName.map((name2) => {\n      return filmData.producers.find((producer) => {\n        return producer.name === name2;\n      })._id;\n    });\n\n    //map types theo _id khi gửi lên BE sẽ có dạng là Array và String\n    //nên khi vào BE phải map lại lần nữa theo dạng Array và Object để đúng với modal trong be\n    filmData.types = filmData.typeName.map((name3) => {\n      console.log(filmData.typeName);\n      return filmData.types.find((type) => {\n        return type.type_name === name3;\n      })._id;\n    });\n\n    //delete bớt các element trong array vì gửi lên BE chỉ gửi những thứ cần thiết \n    //không cần thiết gửi tất cả thông tin không xài đến \n    delete filmData.typeName;\n    delete filmData.producerName;\n    delete filmData.personName;\n    delete filmData.directorName;\n    delete filmData.renderActor;\n    delete filmData.renderDirector;\n    delete filmData.renderProducer;\n    delete filmData.renderType;\n\n    //axios khi post lên BE để xử lý\n    axios\n      .post(\"/add-film\", filmData)\n      .then((res) => {\n        this.state.actors.push(filmData.actors);\n        this.state.directors.push(filmData.directors);\n        this.state.directors.push(filmData.producers);\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  //nhưng vì đây là component CHÁU \n  //nên phải truyền từ conmponent ông NỘI là TabsAdd.js chứa 3 modal add\n  //sau đó tiếp tục truyền tới mỗi form add là Component CHA tiếp đến Component Cháu\n  //mới GET được ĐATA từ DB mà 3 form component CHA gửi lên db\n  //xử lý modal add actors vào tại trang add film mà không cần refresh page\n  //tên actors vừa add được sẽ được update liền tại input để chọn \n  addActorSuccess = (data) => {\n    console.log(data);\n    // console.log(res.data);\n\n    const actors = [...this.state.actors, data.actor];\n    console.log(actors);\n    this.setState({ actors: actors });\n\n    const renderActor = actors.map((actor) => {\n      return actor.name_actor;\n    });\n    // console.log(actors);\n    console.log(renderActor);\n    this.setState({ renderActor });\n  };\n\n   //tên directors vừa add được sẽ được update liền tại input để chọn \n  addDirectorSuccess = (data) => {\n    console.log(data);\n\n    // console.log( [...this.state.directors, data.director]);\n    const directors = [...this.state.directors, data.director];\n    console.log(directors);\n\n    this.setState({ directors: directors });\n\n    const renderDirector = directors.map((director) => {\n      return director.name_director;\n    });\n    console.log(directors);\n    console.log(renderDirector);\n    this.setState({ renderDirector });\n  };\n\n  //tên producers vừa add được sẽ được update liền tại input để chọn \n  addProducerSuccess = (data) => {\n    console.log(data);\n\n    // console.log( [...this.state.producers, data.producers]);\n    const producers = [...this.state.producers, data.producer];\n    console.log(producers);\n\n    this.setState({ producers: producers });\n\n    const renderProducer = producers.map((producer) => {\n      return producer.name;\n    });\n    console.log(producers);\n    console.log(renderProducer);\n    this.setState({ renderProducer });\n  };\n\n  render() {\n    if (this.state.isDone) {\n      return <Redirect to=\"/add-film\" />;\n    }\n    return (\n      <Container className=\"form-add-film\">\n        {/* đây là component CHÁU được truyền xuống từ component CHA và Ông NỘI */}\n        <TabsAdd\n          addActorSuccess={this.addActorSuccess}\n          addDirectorSuccess={this.addDirectorSuccess}\n          addProducerSuccess={this.addProducerSuccess}\n        />\n        <h3 style={{ marginTop: \"30px\" }}>Thêm Phim</h3>\n        <Row>\n          <Col>\n            <TextField\n              id=\"EN_name\"\n              name=\"EN_name\"\n              label=\"Tên gốc của phim\"\n              variant=\"outlined\"\n              value={this.state.EN_name}\n              onChange={this.changeInputHandler}\n            />\n\n            <TextField\n              id=\"VN_name\"\n              name=\"VN_name\"\n              label=\"Tên dịch của phim\"\n              variant=\"outlined\"\n              value={this.state.VN_name}\n              onChange={this.changeInputHandler}\n            />\n\n            <TextField\n              name=\"status\"\n              id=\"status\"\n              select\n              label=\"Trạng thái\"\n              value={this.state.status}\n              onChange={this.changeInputHandler}\n              variant=\"outlined\"\n            >\n              {status.map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </TextField>\n\n            <TextField\n              id=\"duration\"\n              name=\"duration\"\n              label=\"Thời lượng\"\n              variant=\"outlined\"\n              value={this.state.duration}\n              onChange={this.changeInputHandler}\n            />\n\n            <FormControl style={{ width: \"100%\" }} variant=\"outlined\">\n              <InputLabel id=\"demo-mutiple-chip-label\">Thể loại</InputLabel>\n              <Select\n                labelId=\"demo-mutiple-name-label\"\n                id=\"type\"\n                multiple\n                value={this.state.typeName}\n                onChange={this.changeInputMultipleType}\n                input={<Input />}\n                variant=\"outlined\"\n              >\n                {this.state.renderType.map((name3) => (\n                  <MenuItem key={name3} value={name3}>\n                    {name3}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <TextField\n              id=\"urlImg\"\n              name=\"urlImg\"\n              label=\"Url Hình ảnh\"\n              variant=\"outlined\"\n              value={this.state.urlImg}\n              onChange={this.changeInputHandler}\n            />\n\n            {this.state.urlImg ? (\n              <img src={this.state.urlImg} alt={this.state.urlImg} />\n            ) : null}\n\n            <FormControl style={{ width: \"100%\" }} variant=\"outlined\">\n              <InputLabel id=\"demo-mutiple-chip-label\">Đạo diễn</InputLabel>\n              <Select\n                labelId=\"demo-mutiple-name-label\"\n                id=\"directors\"\n                multiple\n                value={this.state.directorName}\n                onChange={this.changeInputMultipleDirector}\n                input={<Input />}\n                variant=\"outlined\"\n              >\n                {this.state.renderDirector.map((name1) => (\n                  <MenuItem key={name1} value={name1}>\n                    {name1}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Col>\n          <Col>\n            <FormControl style={{ width: \"100%\" }} variant=\"outlined\">\n              <InputLabel id=\"demo-mutiple-name-label\">diễn viên</InputLabel>\n              <Select\n                labelId=\"demo-mutiple-name-label\"\n                id=\"actors\"\n                multiple\n                value={this.state.personName}\n                onChange={this.changeInputMultipleActor}\n                input={<Input />}\n                variant=\"outlined\"\n              >\n                {this.state.renderActor.map((name) => (\n                  <MenuItem key={name} value={name}>\n                    {name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <FormControl style={{ width: \"100%\" }} variant=\"outlined\">\n              <InputLabel id=\"demo-mutiple-chip-label\">Nhà Sản Xuất</InputLabel>\n              <Select\n                labelId=\"demo-mutiple-name-label\"\n                id=\"producers\"\n                multiple\n                value={this.state.producerName}\n                onChange={this.changeInputMultipleProducer}\n                input={<Input />}\n                variant=\"outlined\"\n              >\n                {this.state.renderProducer.map((name2) => (\n                  <MenuItem key={name2} value={name2}>\n                    {name2}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <TextField\n              id=\"country\"\n              name=\"country\"\n              label=\"Quốc gia\"\n              variant=\"outlined\"\n              value={this.state.country}\n              onChange={this.changeInputHandler}\n            />\n\n            <TextField\n              id=\"price\"\n              name=\"price\"\n              label=\"Giá phim\"\n              variant=\"outlined\"\n              value={this.state.price}\n              onChange={this.changeInputHandler}\n            />\n\n            <TextField\n              id=\"discount\"\n              name=\"discount\"\n              label=\"Giá giảm\"\n              variant=\"outlined\"\n              value={this.state.discount}\n              onChange={this.changeInputHandler}\n            />\n\n            <TextField\n              id=\"urlFilm\"\n              name=\"urlFilm\"\n              label=\"link phim\"\n              variant=\"outlined\"\n              value={this.state.urlFilm}\n              onChange={this.changeInputHandler}\n            />\n\n            {this.state.urlFilm ? (\n              <iframe\n                src={this.state.urlFilm}\n                alt={this.state.urlFilm}\n                title=\"halo\"\n              />\n            ) : null}\n\n            <TextField\n              id=\"date\"\n              name=\"date\"\n              type=\"date\"\n              value={this.state.date}\n              onChange={this.changeInputHandler}\n              //   label=\"Ngày chiếu\"\n              variant=\"outlined\"\n            />\n          </Col>\n        </Row>\n\n        <TextField\n          id=\"content\"\n          name=\"content\"\n          label=\"Nội dung phim\"\n          multiline\n          rows={4}\n          variant=\"outlined\"\n          value={this.state.content}\n          onChange={this.changeInputHandler}\n        />\n\n        <div className=\"add-film-button\">\n          <Button\n            variant=\"contained\"\n            style={{ background: \"yellowgreen\" }}\n            onClick={this.submitHandler}\n          >\n            Thêm phim\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\">\n            Hủy bỏ\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default AddFilm;\n","D:\\Project\\fe-admin-cinema-main\\src\\pages\\AllFilm\\AllFilm.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\pages\\EditFilm\\EditFilm.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\axios-constain.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\components\\Menu\\Menu.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\pages\\AddDirector\\AddDirector.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\pages\\AddActor\\AddActor.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\components\\ItemFilm\\ItemFilm.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\pages\\AllProducer\\AllProducer.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\components\\ItemProducer\\ItemProducer.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\pages\\EditProducer\\EditProducer.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\pages\\AllActor\\AllActor.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\components\\ItemActor\\ItemActor.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\pages\\EditActor\\EditActor.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\pages\\AllDirector\\AllDirector.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\components\\ItemDirector\\ItemDirector.js",[],"D:\\Project\\fe-admin-cinema-main\\src\\pages\\EditDirector\\EditDirector.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":11,"column":8,"nodeType":"107","messageId":"108","endLine":11,"endColumn":15},{"ruleId":"109","severity":1,"message":"110","line":53,"column":5,"nodeType":"111","messageId":"112","endLine":53,"endColumn":10},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'TabsAdd' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'types'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]